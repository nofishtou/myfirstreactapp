{"version":3,"sources":["components/TDItem.js","components/TDheader.js","components/TDarr.js","App.js","index.js"],"names":["TDItem","props","textContent","item","isEdit","completed","react_default","a","createElement","ref","inputEditRef","type","name","value","tempEdit","text","onChange","event","changeEdit","className","onClick","saveItem","id","toEdit","checked","checkChkBox","disabled","deleteItem","TDheader","inputAddRef","placeholder","addItem","TDarr","App","state","todos","React","createRef","changeLocalStorage","data","localStorage","setItem","JSON","stringify","updTodos","_this","map","Object","objectSpread","setState","changeAdd","_event$target","target","defineProperty","_event$target2","newItem","forEach","current","concat","toConsumableArray","filter","length","parse","getItem","this","_this2","toDoItems","components_TDItem","key","components_TDheader","tempAdd","Component","ReactDOM","render","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.232d2da2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction TDItem(props) {\r\n\r\n  let textContent\r\n  \r\n  if(props.item.isEdit && !props.item.completed) {\r\n    textContent = (\r\n      <span>\r\n          <input \r\n            ref = {props.inputEditRef}\r\n            type=\"text\" \r\n            name = \"tempEdit\" \r\n            value={props.tempEdit ? props.tempEdit : props.item.text }  \r\n            onChange={(event) => {props.changeEdit(event)} \r\n          }\r\n        />\r\n        <button \r\n            className=\"save-icon\" \r\n            onClick={() => {props.saveItem(props.item.id)}}\r\n            >&#10004;\r\n        </button>\r\n      </span>\r\n    )\r\n  } else {\r\n    textContent = (<span \r\n                    className={props.item.completed ? \"completed\" : \"text-content\"} \r\n                    onClick={props.item.completed ? null : () => {props.toEdit(props.item.id)}}\r\n                  >\r\n                    {props.item.text}\r\n                  </span>)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"todo-item\">\r\n      <input \r\n        type=\"checkbox\" \r\n        name=\"\" id=\"\" \r\n        checked={props.item.completed} \r\n        onChange={() => {props.checkChkBox(props.item.id)}} \r\n        disabled = {props.item.completed || props.item.isEdit ? true : false} \r\n      />\r\n      {textContent}\r\n      <button \r\n        className=\"delete-icon\" \r\n        onClick={() => {props.deleteItem(props.item.id)}}\r\n      >\r\n        &#10006;\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TDItem","import React from 'react';\r\n\r\nfunction TDheader(props) {\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <h1>MY TODO LIST ON REACT</h1>\r\n      <input\r\n        ref = {props.inputAddRef}\r\n        className=\"add-input\" \r\n        type=\"text\"                      \r\n        name=\"tempAdd\" \r\n        placeholder=\"What do you want to do?\" \r\n      />\r\n      <button \r\n        className=\"add-btn\" \r\n        onClick={props.addItem}\r\n      >\r\n        Add new item\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TDheader","const TDarr = [    \r\n    {\r\n      id: 1,\r\n      text: \"Take out the trash\",\r\n      completed: true,\r\n      isEdit: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Grocery shopping\",\r\n      completed: false,\r\n      isEdit: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Clean gecko tank\",\r\n      completed: false,\r\n      isEdit: false,\r\n    },\r\n    {\r\n      id: 4,\r\n      text: \"Mow lawn\",\r\n      completed: true,\r\n      isEdit: false,\r\n    },\r\n    {\r\n      id: 5,\r\n      text: \"Catch up on Arrested Development\",\r\n      completed: false,\r\n      isEdit: false,\r\n    }\r\n]\r\n\r\n\r\nexport default TDarr ","import React, {Component} from 'react';\nimport TDItem from './components/TDItem';\nimport TDheader from './components/TDheader';\nimport TDarr from './components/TDarr';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    todos: TDarr\n  }\n  \n  inputAddRef = React.createRef()\n  inputEditRef = React.createRef()\n\n  changeLocalStorage = (data) => localStorage.setItem('TODO', JSON.stringify(data))\n\n  componentDidMount() {\n    if(localStorage.length !== 0){\n      const todos = JSON.parse(localStorage.getItem( \"TODO\"))\n      this.setState({todos})  \n    }\n  }\n\n  checkChkBox = (id) => {\n    const updTodos = this.state.todos.map( item => {\n      if(item.id === id) {\n        item = {...item, completed: true } \n      }\n      return item\n    })\n\n    this.setState({todos: updTodos})\n    this.changeLocalStorage(updTodos)\n  }\n\n  toEdit = (id) => {\n    const updTodos = this.state.todos.map( item => {\n      if(item.id === id) {\n        item = {...item, isEdit: true } \n      }\n      return item\n    })\n    \n    this.setState({todos: updTodos})\n  }\n\n  changeAdd = (event) => {\n    const {name, value} = event.target\n    \n    this.setState({ [name]: value})\n  }\n\n  changeEdit = (event) => {\n    const {name, value} = event.target\n    \n    this.setState({[name]: value})\n  }\n\n  addItem = () => {\n    const newItem = {\n      id: 0 ,\n      text: \"\",\n      completed: false,\n      isEdit: false\n    }\n \n    // give uniq id\n    this.state.todos.forEach(item => {\n      if (item.id > newItem.id) {\n        newItem.id = item.id\n      }\n      return ++newItem.id\n    })\n\n    newItem.text = this.inputAddRef.current.value\n\n    const updTodos =  [...this.state.todos, newItem]\n\n    this.setState({\n      todos: updTodos,\n    })\n    this.inputAddRef.current.value = \"\"\n    this.changeLocalStorage(updTodos)\n  }\n\n  saveItem = (id) => {\n    const updTodos = this.state.todos.map( item => {\n   \n      if (item.id === id) {\n        if(this.state.tempEdit !== \"\") {\n          item = {...item, text: this.inputEditRef.current.value, isEdit: false } \n        } else {\n          item = {...item, isEdit: false } \n        }          \n      }\n    \n      return item\n    })\n\n    this.setState({\n        todos: updTodos\n    })\n    \n    this.changeLocalStorage(updTodos)\n  }\n\n  deleteItem = (id) => {\n    const todos = this.state.todos;\n    const updTodos = todos.filter(item => item.id !== id )\n    \n    this.setState({todos: updTodos})\n    this.changeLocalStorage(updTodos)\n  }\n\n  render() {\n    const toDoItems = this.state.todos.map( (item) => {\n        return <TDItem \n                  key = {item.id} \n                  item = {item} \n                  checkChkBox = {this.checkChkBox} \n                  deleteItem = {this.deleteItem}\n                  toEdit = {this.toEdit}  \n                  changeEdit = {this.changeEdit} \n                  tempEdit={this.state.tempEdit} \n                  saveItem = {this.saveItem}\n                  inputEditRef = {this.inputEditRef}\n                  />\n      }\n    )\n    \n    return (\n      <div>\n        <TDheader \n          tempAdd = {this.state.tempAdd}  \n          changeAdd = {this.changeAdd} \n          addItem = {this.addItem} \n          inputAddRef={this.inputAddRef}/>\n        <div className=\"todo-list\">\n          {toDoItems}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}